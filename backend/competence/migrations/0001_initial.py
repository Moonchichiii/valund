# Generated by Django 5.2.6 on 2025-09-23 23:05

import competence.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompetenceDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('document_type', models.CharField(choices=[('certificate', 'Certificate'), ('diploma', 'Diploma'), ('license', 'License'), ('portfolio', 'Portfolio'), ('reference', 'Reference Letter'), ('other', 'Other')], default='certificate', max_length=20)),
                ('file', models.FileField(upload_to=competence.models.competence_document_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('requires_revision', 'Requires Revision')], default='uploaded', max_length=20)),
                ('issuing_organization', models.CharField(blank=True, max_length=200)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('skills', models.ManyToManyField(blank=True, related_name='competence_documents', to='accounts.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competence_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Competence Document',
                'verbose_name_plural': 'Competence Documents',
                'db_table': 'competence_document',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CompetenceAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('uploaded', 'Uploaded'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('revised', 'Revised'), ('deleted', 'Deleted'), ('status_changed', 'Status Changed')], max_length=20)),
                ('description', models.TextField()),
                ('previous_value', models.JSONField(blank=True, null=True)),
                ('new_value', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competence_audit_logs', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='competence.competencedocument')),
            ],
            options={
                'verbose_name': 'Competence Audit Log',
                'verbose_name_plural': 'Competence Audit Logs',
                'db_table': 'competence_audit_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompetenceReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('requires_revision', 'Requires Revision')], max_length=20)),
                ('notes', models.TextField()),
                ('private_notes', models.TextField(blank=True, help_text='Internal notes not visible to document owner')),
                ('authenticity_score', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('relevance_score', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('quality_score', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='competence.competencedocument')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competence_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Competence Review',
                'verbose_name_plural': 'Competence Reviews',
                'db_table': 'competence_review',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompetenceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('document_type', models.CharField(choices=[('certificate', 'Certificate'), ('diploma', 'Diploma'), ('license', 'License'), ('portfolio', 'Portfolio'), ('reference', 'Reference Letter'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('required_fields', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('suggested_skills', models.ManyToManyField(blank=True, related_name='competence_templates', to='accounts.skill')),
            ],
            options={
                'verbose_name': 'Competence Template',
                'verbose_name_plural': 'Competence Templates',
                'db_table': 'competence_template',
                'ordering': ['name'],
            },
        ),
    ]
